version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - npm install -g aws-cli
      - aws --version
      - echo "Installing dependencies..."
      - npm install

  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/reblog
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}

  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing the Docker image..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Writing image definitions file..."
      - echo "[{\"name\":\"reblog-app\",\"imageUri\":\"$REPOSITORY_URI:$IMAGE_TAG\"}]" > imagedefinitions.json
      - echo "Updating ECS service..."
      - aws ecs update-service --cluster reblog-cluster --service reblog-service --force-new-deployment
      - echo "Waiting for service to stabilize..."
      - aws ecs wait services-stable --cluster reblog-cluster --services reblog-service

artifacts:
  files:
    - imagedefinitions.json
    - appspec.yml
    - taskdef.json
    - aws/ecs-service.json
  discard-paths: yes

cache:
  paths:
    - 'node_modules/**/*' 